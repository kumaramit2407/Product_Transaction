{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Setu\\\\Desktop\\\\product-transaction\\\\frontend\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { getPriceRange } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = ({\n  month\n}) => {\n  _s();\n  const [priceRange, setPriceRange] = useState({});\n  useEffect(() => {\n    fetchPriceRange();\n  }, [month]);\n  const fetchPriceRange = async () => {\n    const response = await getPriceRange(month);\n    setPriceRange(response.data);\n  };\n  const data = {\n    labels: ['0-100', '101-200', '201-300', '301-400', '401-500', '501-600', '601-700', '701-800', '801-900', '901+'],\n    datasets: [{\n      label: 'Items in Price Range',\n      data: Object.values(priceRange),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_s(BarChart, \"HM2BfeQ7RwCREEg6SpZAuR7fnJY=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","getPriceRange","jsxDEV","_jsxDEV","BarChart","month","_s","priceRange","setPriceRange","fetchPriceRange","response","data","labels","datasets","label","Object","values","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Setu/Desktop/product-transaction/frontend/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { getPriceRange } from '../services/apiService';\r\n\r\nconst BarChart = ({ month }) => {\r\n  const [priceRange, setPriceRange] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchPriceRange();\r\n  }, [month]);\r\n\r\n  const fetchPriceRange = async () => {\r\n    const response = await getPriceRange(month);\r\n    setPriceRange(response.data);\r\n  };\r\n\r\n  const data = {\r\n    labels: ['0-100', '101-200', '201-300', '301-400', '401-500', '501-600', '601-700', '701-800', '801-900', '901+'],\r\n    datasets: [\r\n      {\r\n        label: 'Items in Price Range',\r\n        data: Object.values(priceRange),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar data={data} />;\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdW,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,QAAQ,GAAG,MAAMT,aAAa,CAACI,KAAK,CAAC;IAC3CG,aAAa,CAACE,QAAQ,CAACC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMA,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC;IACjHC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,sBAAsB;MAC7BH,IAAI,EAAEI,MAAM,CAACC,MAAM,CAACT,UAAU,CAAC;MAC/BU,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBAAOd,OAAA,CAACH,GAAG;IAACW,IAAI,EAAEA;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5B,CAAC;AAACf,EAAA,CAxBIF,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}