{"ast":null,"code":"// // src/components/TransactionsTable.js\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const TransactionsTable = () => {\n//   const [transactions, setTransactions] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [page, setPage] = useState(1);\n//   const [perPage, setPerPage] = useState(10);\n//   const [month, setMonth] = useState(\"March\"); // default month\n//   const [totalPages, setTotalPages] = useState(1);\n\n//   const months = [\n//     \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n//     \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n//   ];\n\n//   useEffect(() => {\n//     fetchTransactions();\n//   }, [searchQuery, page, month]);\n\n//   const fetchTransactions = async () => {\n//     try {\n//       const response = await axios.get(\n//         `http://localhost:5000/api/transactions`,\n//         {\n//           params: {\n//             search: searchQuery,\n//             page,\n//             perPage,\n//             month,\n//           },\n//         }\n//       );\n//       setTransactions(response.data.transactions);\n//       setTotalPages(response.data.totalPages);\n//     } catch (error) {\n//       console.error(\"Error fetching transactions\", error);\n//     }\n//   };\n\n//   const handleSearchChange = (event) => {\n//     setSearchQuery(event.target.value);\n//     setPage(1); // Reset to first page on new search\n//   };\n\n//   const handleMonthChange = (event) => {\n//     setMonth(event.target.value);\n//     setPage(1); // Reset to first page on month change\n//   };\n\n//   const handleNextPage = () => {\n//     if (page < totalPages) setPage(page + 1);\n//   };\n\n//   const handlePreviousPage = () => {\n//     if (page > 1) setPage(page - 1);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Transactions Table</h2>\n//       <div>\n//         <label>Month:</label>\n//         <select value={month} onChange={handleMonthChange}>\n//           {months.map((m, index) => (\n//             <option key={index} value={m}>\n//               {m}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search transactions...\"\n//           value={searchQuery}\n//           onChange={handleSearchChange}\n//         />\n//       </div>\n\n//       <table border=\"1\">\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Title</th>\n//             <th>Description</th>\n//             <th>Price</th>\n//             <th>Category</th>\n//             <th>Sold</th>\n//             <th>Image</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {transactions.length > 0 ? (\n//             transactions.map((transaction) => (\n//               <tr key={transaction.id}>\n//                 <td>{transaction.title}</td>\n//                 <td>{transaction.description}</td>\n//                 <td>{transaction.price}</td>\n//                 <td>{transaction.dateOfSale}</td>\n//                 <td>{transaction.sold ? \"Yes\" : \"No\"}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"5\">No transactions found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n\n//       <div>\n//         <button onClick={handlePreviousPage} disabled={page === 1}>\n//           Previous\n//         </button>\n//         <span>\n//           Page {page} of {totalPages}\n//         </span>\n//         <button onClick={handleNextPage} disabled={page === totalPages}>\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TransactionsTable;","map":{"version":3,"names":[],"sources":["C:/Users/Setu/Desktop/product-transaction/frontend/src/components/TransactionsTable.js"],"sourcesContent":["// // src/components/TransactionsTable.js\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const TransactionsTable = () => {\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [page, setPage] = useState(1);\r\n//   const [perPage, setPerPage] = useState(10);\r\n//   const [month, setMonth] = useState(\"March\"); // default month\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n\r\n//   const months = [\r\n//     \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n//     \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     fetchTransactions();\r\n//   }, [searchQuery, page, month]);\r\n\r\n//   const fetchTransactions = async () => {\r\n//     try {\r\n//       const response = await axios.get(\r\n//         `http://localhost:5000/api/transactions`,\r\n//         {\r\n//           params: {\r\n//             search: searchQuery,\r\n//             page,\r\n//             perPage,\r\n//             month,\r\n//           },\r\n//         }\r\n//       );\r\n//       setTransactions(response.data.transactions);\r\n//       setTotalPages(response.data.totalPages);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching transactions\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSearchChange = (event) => {\r\n//     setSearchQuery(event.target.value);\r\n//     setPage(1); // Reset to first page on new search\r\n//   };\r\n\r\n//   const handleMonthChange = (event) => {\r\n//     setMonth(event.target.value);\r\n//     setPage(1); // Reset to first page on month change\r\n//   };\r\n\r\n//   const handleNextPage = () => {\r\n//     if (page < totalPages) setPage(page + 1);\r\n//   };\r\n\r\n//   const handlePreviousPage = () => {\r\n//     if (page > 1) setPage(page - 1);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Transactions Table</h2>\r\n//       <div>\r\n//         <label>Month:</label>\r\n//         <select value={month} onChange={handleMonthChange}>\r\n//           {months.map((m, index) => (\r\n//             <option key={index} value={m}>\r\n//               {m}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//       </div>\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search transactions...\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearchChange}\r\n//         />\r\n//       </div>\r\n\r\n//       <table border=\"1\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Title</th>\r\n//             <th>Description</th>\r\n//             <th>Price</th>\r\n//             <th>Category</th>\r\n//             <th>Sold</th>\r\n//             <th>Image</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {transactions.length > 0 ? (\r\n//             transactions.map((transaction) => (\r\n//               <tr key={transaction.id}>\r\n//                 <td>{transaction.title}</td>\r\n//                 <td>{transaction.description}</td>\r\n//                 <td>{transaction.price}</td>\r\n//                 <td>{transaction.dateOfSale}</td>\r\n//                 <td>{transaction.sold ? \"Yes\" : \"No\"}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"5\">No transactions found</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       <div>\r\n//         <button onClick={handlePreviousPage} disabled={page === 1}>\r\n//           Previous\r\n//         </button>\r\n//         <span>\r\n//           Page {page} of {totalPages}\r\n//         </span>\r\n//         <button onClick={handleNextPage} disabled={page === totalPages}>\r\n//           Next\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TransactionsTable;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}